name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'testdb'
          mysql user: 'test'
          mysql password: 'password'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build with Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Docker image build
        run: |
          docker build -t ${{ secrets.DOCKER_USER }}/${{ secrets.APP }} .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Dockerhub push
        run: |
          docker push ${{ secrets.DOCKER_USER }}/${{ secrets.APP }}:latest

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker rm -f ${{ secrets.APP }}
            docker pull ${{ secrets.DOCKER_USER }}/${{ secrets.APP }}:latest
            docker run -d -e VAULT_URI=${{ secrets.VAULT_URI }}  -e VAULT_TOKEN=${{ secrets.VAULT_TOKEN }} -e VAULT_AUTHENTICATION=${{ secrets.VAULT_AUTHENTICATION }} -e VAULT_BACKEND=${{ secrets.VAULT_BACKEND }} --name ${{ secrets.APP }} -p 8080:8080 --network=${{ secrets.DOCKER_NETWORK }} ${{ secrets.DOCKER_USER }}/${{ secrets.APP }}:latest
